# Config for AnyCubic Vyper

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA7
position_min: -3
position_endstop: -3
position_max: 245
homing_speed: 30.0

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC13
microsteps: 16
rotation_distance: 32
endstop_pin: !PC5
position_min: -17
position_endstop: -17
position_max: 245
homing_speed: 30.0

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC14
microsteps: 16
rotation_distance: 8
endstop_pin: PB2
position_endstop: 2.550
position_max: 260
position_min: -3
homing_speed: 5.0

[stepper_z1]
step_pin: PC0
dir_pin: !PC1
enable_pin: !PC15
microsteps: 16
rotation_distance: 8
endstop_pin: PC6

[extruder]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PA15
microsteps: 16
rotation_distance: 22.226
gear_ratio: 50:17
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_kp: 31.230
pid_ki: 1.946
pid_kd: 125.309
min_temp: 0
max_temp: 260

[heater_fan extruder_fan]
pin: PB1

[heater_bed]
heater_pin: PA4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB0
control: pid
pid_kp: 59.233
pid_ki: 0.746
pid_kd: 1175.038
min_temp: 0
max_temp: 110

[fan]
pin: PA0

[temperature_fan mainboard]
pin: mcu:PA14
sensor_type: temperature_mcu
max_power: 1.0
shutdown_speed: 1.0
hardware_pwm: false
kick_start_time: 0.5
off_below: 0.4
max_temp: 100
min_temp: 20
target_temp: 50
max_speed: 1.0
min_speed: 0.3
control: pid
pid_Kp: 1
pid_Ki: 1
pid_Kd: 1

[temperature_sensor localhost]
sensor_type: temperature_host

[probe]
pin: !PB12
z_offset: 0
speed: 0.5
samples: 1
activate_gcode:
    PROBE_RESET

[output_pin beeper_pin]
pin: PB15
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001

[output_pin probe_reset_pin]
pin: PB13

[output_pin LED]
pin: mcu:PA13
pwm: False
value: 0

[bed_mesh]
mesh_min: 15,15
mesh_max: 230, 230
probe_count: 5
mesh_pps: 2
algorithm: bicubic
relative_reference_index: 12

[filament_switch_sensor runout]
pause_on_runout: True
switch_pin: PA5

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[safe_z_home]
home_xy_position: -3,-17
z_hop: 10

[printer]
kinematics: cartesian
max_velocity: 150
max_accel: 1500
max_accel_to_decel: 1500
max_z_velocity: 5
max_z_accel: 100

[firmware_retraction]
retract_length: 0.8
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 40

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes

[pause_resume]

[gcode_macro PROBE_RESET]
description: Reset the strain gauge for the hotend probe
gcode:
    SET_PIN PIN=probe_reset_pin VALUE=0
    G4 P300
    SET_PIN PIN=probe_reset_pin VALUE=1
    G4 P100

[gcode_macro START_PRINT]
description: Print start
gcode:
    {% set BED_TEMP = params.BED_TEMP | default(60) | float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(190) | float %}
    # Lower temp for bed mesh probing, to prevent ooze
    {% set PROBE_TEMP = 140 %}
    CLEAR_PAUSE
    # Start heating bed
    M140 S{BED_TEMP}
    # Home
    G28
    # Set extruder to relative mode
    M83
    # Start heating extruder to probe temp after bed temp reaches 65%
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP * 0.65}
    M104 S{PROBE_TEMP}
    # Wait for bed to reach temp
    M190 S{BED_TEMP}
    # Wait for extruder to reach temp
    M109 S{PROBE_TEMP}
    # Probe bed mesh
    BED_MESH_CALIBRATE
    # Bring extruder up to print temp
    M109 S{EXTRUDER_TEMP}
    # Turn on LED
    SET_PIN PIN=LED VALUE=1.00
    # Prime extruder
    G92 E0
    G1 E{printer['gcode_macro END_PRINT'].retract} F500
    G92 E0
    # Abolute positioning
    G90

[gcode_macro END_PRINT]
description: Print end
variable_retract: 8.0
gcode:
    TURN_OFF_HEATERS
    # Turn off LED
    SET_PIN PIN=LED VALUE=0.00
    # Relative positioning
    G91
    # Retract filament
    G1 E-1 F3000
    # Move a bit and retract filament even more
    G1 X-0.5 Y-0.5 Z5 E-{retract}
    # Abolute positioning
    G90
    # Move bed to front
    G1 X0 Y200 F2200
    # Turn off part fan
    M107
    # Steppers off
    M84
    PLAY_END_MUSIC

[gcode_macro PLAY_END_MUSIC]
description: Play a song
gcode:
    M300 S1760 P93
    M300 S3135 P93
    M300 S2349 P93
    M300 S0 P93
    M300 S2793 P93
    M300 S0 P93
    M300 S2637 P93
    M300 S0 P93
    M300 S880 P187
    M300 S2349 P93
    M300 S2793 P93
    M300 S3135 P93
    M300 S0 P93
    M300 S2637 P93
    M300 S0 P187
    M300 S1760 P93
    M300 S3135 P93
    M300 S2349 P93
    M300 S2793 P93
    M300 S2637 P93
    M300 S880 P93
    M300 S2637 P93
    M300 S2793 P93
    M300 S3135 P93
    M300 S2637 P187

[gcode_macro M300]
description: Beep
gcode:
    # Default to 666 Hz tone (~E5) for 150 milliseconds
    {% set S = params.S | default(666) | int | default(666, True) %}
    {% set P = params.P | default(150) | int %}
    SET_PIN PIN=beeper_pin VALUE=0.5 CYCLE_TIME={1.0/S}
    G4 P{P}
    SET_PIN PIN=beeper_pin VALUE=0

[gcode_macro PAUSE]
description: Pause the running print
rename_existing: PAUSE_BASE
gcode:
    PAUSE_BASE
    _TOOLHEAD_PARK

[gcode_macro RESUME]
description: Resume the running print
rename_existing: RESUME_BASE
gcode:
    {% if printer.extruder.can_extrude %}
        M83
        G1 E{printer['gcode_macro _TOOLHEAD_PARK'].retract} F2100
        {% if printer.gcode_move.absolute_extrude %}
            M82
        {% endif %}
    {% else %}
        {action_respond_info('Extruder not hot enough')}
    {% endif %}
    RESUME_BASE {params.items() | map('join', '=') | join(' ')}

[gcode_macro CANCEL_PRINT]
description: Cancel the running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
    {% if park | lower == 'true' and not printer.pause_resume.is_paused %}
        _TOOLHEAD_PARK
    {% endif %}
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    END_PRINT

[gcode_macro _TOOLHEAD_PARK]
description: Helper to park toolhead
variable_retract: 1.0
gcode:
    # set park positon for x and y
    {% set x_park = printer.toolhead.axis_maximum.x - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y - 5.0 %}
    # calculate park position for z
    {% set z_park_delta = 2.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set cur_z = printer.toolhead.position.z %}
    {% if cur_z < (max_z - z_park_delta) %}
        {% set z_safe = z_park_delta %}
    {% else %}
        {% set z_safe = max_z - cur_z %}
    {% endif %}
    # Retract filament
    {% if printer.extruder.can_extrude %}
        M83
        G1 E-{retract} F2100
        {% if printer.gcode_move.absolute_extrude %}
            M82
        {% endif %}
    {% else %}
        {action_respond_info('Extruder not hot enough')}
    {% endif %}
    # Park head
    {% if 'x' in printer.toolhead.homed_axes and 'y' in printer.toolhead.homed_axes and 'z' in printer.toolhead.homed_axes %}
        G91
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
        {% if not printer.gcode_move.absolute_coordinates %}
            G91
        {% endif %}
    {% else %}
        {action_respond_info('Printer not homed')}
    {% endif %}
